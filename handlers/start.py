from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import ReplyKeyboardBuilder

from db import get_order, update_order
from states import OrderStates

router = Router()

@router.message(Command("start"))
async def start_handler(message: Message, state: FSMContext):
    args = message.text.split()
    if len(args) > 1 and args[1].startswith("order_"):
        order_id = args[1].split("_")[1]
        order = await get_order(order_id)
        if order:
            await state.update_data(order_id=order_id)
            await message.answer(
                f"–ó–∞—è–≤–∫–∞ #{order_id}\n–°—É–º–º–∞: {order['price']} ‚ÇΩ\n–°–µ—Ä–≤–∏—Å: {order['service']}"
            )
            await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
            await state.set_state(OrderStates.waiting_for_name)
            return

    keyboard = ReplyKeyboardBuilder()
    keyboard.button(text="üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞")
    keyboard.button(text="üì¶ –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏")
    keyboard.button(text="‚ùì –ü–æ–º–æ—â—å")
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AltPay! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=keyboard.as_markup(resize_keyboard=True)
    )

@router.message(Command("new"))
async def new_command(message: Message):
    await message.answer("–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://altpay.lovigin.com")

@router.message(Command("status"))
async def status_command(message: Message):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:")

@router.message(Command("help"))
async def help_command(message: Message):
    await message.answer(
        "üõ† AltPay Bot ‚Äî –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –æ–ø–ª–∞—Ç—ã –∑–∞—Ä—É–±–µ–∂–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤.\n\n"
        "üîπ /new ‚Äî —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É\n"
        "üîπ /status ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å\n"
        "üîπ /help ‚Äî –ø–æ–º–æ—â—å\n\n"
        "–ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://altpay.lovigin.com"
    )

@router.message(OrderStates.waiting_for_name)
async def get_name(message: Message, state: FSMContext):
    data = await state.get_data()
    await update_order(data["order_id"], {"name": message.text})
    await message.answer("–£–∫–∞–∂–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–µ—Ä–µ–≤–æ–¥–∞ (–∫–∞—Ä—Ç–∞, –°–ë–ü, SWIFT):")
    await state.set_state(OrderStates.waiting_for_payment_method)

@router.message(OrderStates.waiting_for_payment_method)
async def get_method(message: Message, state: FSMContext):
    data = await state.get_data()
    await update_order(data["order_id"], {"method": message.text})
    await message.answer("–û—Å—Ç–∞–≤—å—Ç–µ Telegram –∏–ª–∏ email –¥–ª—è —Å–≤—è–∑–∏:")
    await state.set_state(OrderStates.waiting_for_contact)

@router.message(OrderStates.waiting_for_contact)
async def get_contact(message: Message, state: FSMContext):
    data = await state.get_data()
    await update_order(data["order_id"], {
        "contact": message.text,
        "status": "–∑–∞–ø–æ–ª–Ω–µ–Ω–∞"
    })
    await message.answer("–°–ø–∞—Å–∏–±–æ! –ó–∞—è–≤–∫–∞ –ø–µ—Ä–µ–¥–∞–Ω–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")
    await state.clear()