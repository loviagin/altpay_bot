from fastapi import FastAPI, Request
from fastapi.middleware.cors import CORSMiddleware
from db import create_order

app = FastAPI()

# –†–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ (–µ—Å–ª–∏ –ª–µ–Ω–¥–∏–Ω–≥ –Ω–∞ –¥—Ä—É–≥–æ–º –¥–æ–º–µ–Ω–µ)
app.add_middleware(
    CORSMiddleware,
    allow_origins=["https://altpay.lovigin.com"],  # –º–æ–∂–µ—à—å —É–∫–∞–∑–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–æ–º–µ–Ω
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

@app.post("/api/save-order")
async def save_order(request: Request):
    data = await request.json()
    print("üõ¨ –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞:", data, flush=True)

    order_id = data.get("id")
    price = data.get("price")
    service = data.get("service")

    if not order_id or not price or not service:
        print("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö", flush=True)
        return {"success": False, "message": "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö"}

    await create_order(order_id, price, service)
    print("‚úÖ create_order –≤—ã–∑–≤–∞–Ω–∞", flush=True)
    return {"success": True}