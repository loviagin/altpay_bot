import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from currency_fetcher import fetch_rub_to_byn, fetch_byn_to_kzt, fetch_usd_to_kzt


async def test_rub_to_byn():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ RUB/BYN —Ñ–µ—Ç—á–µ—Ä"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ RUB/BYN —Ñ–µ—Ç—á–µ—Ä–∞...")
    result = await fetch_rub_to_byn()
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    return result


def test_byn_to_kzt():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ BYN/KZT —Ñ–µ—Ç—á–µ—Ä"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ BYN/KZT —Ñ–µ—Ç—á–µ—Ä–∞...")
    result = fetch_byn_to_kzt()
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    return result


def test_usd_to_kzt():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ USD/KZT —Ñ–µ—Ç—á–µ—Ä"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ USD/KZT —Ñ–µ—Ç—á–µ—Ä–∞...")
    result = fetch_usd_to_kzt()
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    return result


if __name__ == "__main__":
    import sys
    
    if len(sys.argv) != 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python test_single_fetcher.py [rub|byn|usd]")
        print("  rub - —Ç–µ—Å—Ç RUB/BYN —Ñ–µ—Ç—á–µ—Ä–∞")
        print("  byn - —Ç–µ—Å—Ç BYN/KZT —Ñ–µ—Ç—á–µ—Ä–∞")
        print("  usd - —Ç–µ—Å—Ç USD/KZT —Ñ–µ—Ç—á–µ—Ä–∞")
        sys.exit(1)
    
    fetcher_type = sys.argv[1].lower()
    
    if fetcher_type == "rub":
        asyncio.run(test_rub_to_byn())
    elif fetcher_type == "byn":
        test_byn_to_kzt()
    elif fetcher_type == "usd":
        test_usd_to_kzt()
    else:
        print("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Ñ–µ—Ç—á–µ—Ä–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: rub, byn, usd")
        sys.exit(1) 